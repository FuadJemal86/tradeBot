generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        Int      @id @default(autoincrement()) @map("id")
  name      String   @map("name")
  email     String   @unique @map("email")
  phone     String   @map("phone")
  isActive  Boolean  @default(true) @map("is_active")
  createdAt DateTime @default(now()) @map("created_at")
}

model Category {
  id      Int       @id @default(autoincrement()) @map("id")
  name    String    @unique @map("name")
  product Product[]
}

model Trader {
  id        Int      @id @default(autoincrement()) @map("id")
  fullName  String   @map("full_name")
  email     String   @unique @map("email")
  phone     String?  @map("phone")
  location  String   @map("location")
  isActive  Boolean  @default(true) @map("is_active")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  product Product[]
  trade   Trade[]
  rate    Rate[]
  payment Payment[]

  @@index([email])
  @@index([location])
}

model Product {
  id          Int      @id @default(autoincrement()) @map("id")
  name        String   @map("name")
  description String   @map("description")
  category_id Int      @map("category_id")
  trader_id   Int      @map("trader_id")
  price       Float    @map("price")
  quantity    Int      @map("quantity")
  image1      String?  @map("image1")
  image2      String?  @map("image2")
  image3      String?  @map("image3")
  image4      String?  @map("image4")
  createdAt   DateTime @default(now())

  trade    Trade[]
  rate     Rate[]
  payment  Payment[]
  category Category  @relation(fields: [category_id], references: [id])
  trader   Trader    @relation(fields: [trader_id], references: [id])

  @@index([category_id])
  @@index([price])
  @@index([trader_id])
  @@index([createdAt])
}

model PriceHistory {
  id         Int      @id @default(autoincrement()) @map("id")
  price      Float    @map("price")
  product_id Int      @map("product_id")
  createdAt  DateTime @default(now()) @map("created_at")

  @@index([product_id])
}

model Trade {
  id             Int      @id @default(autoincrement()) @map("id")
  product_id     Int      @map("product_id")
  trader_id      Int      @map("trader_id")
  buyer_id       Int      @map("buyer_id")
  quantity       Int      @map("quantity")
  transaction_id Int      @map("transaction_id")
  createdAt      DateTime @default(now()) @map("created_at")

  product Product @relation(fields: [product_id], references: [id])
  trader  Trader  @relation(fields: [trader_id], references: [id])

  @@index([trader_id])
  @@index([buyer_id])
  @@index([product_id])
}

model Rate {
  id         Int      @id @default(autoincrement()) @map("id")
  trader_id  Int      @map("trader_id")
  product_id Int      @map("product_id")
  rate       Int      @map("rate")
  createdAt  DateTime @default(now()) @map("created_at")

  trader  Trader  @relation(fields: [trader_id], references: [id])
  product Product @relation(fields: [product_id], references: [id])

  @@index([trader_id])
  @@index([product_id])
}

model Payment {
  id         Int   @id @default(autoincrement()) @map("id")
  trader_id  Int   @map("trader_id")
  payer_id   Int   @map("payer_id")
  product_id Int   @map("product_id")
  price      Float @map("price")

  trader  Trader  @relation(fields: [trader_id], references: [id])
  product Product @relation(fields: [product_id], references: [id])

  @@index([trader_id])
  @@index([payer_id])
}

model AILog {
  id        Int      @id @default(autoincrement())
  userId    Int
  queryType String
  queryData Json
  aiResult  Json
  createdAt DateTime @default(now())

  @@index([userId])
}

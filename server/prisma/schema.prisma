generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  phone     String
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
}

model Category {
  id      Int       @id @default(autoincrement())
  name    String    @unique
  product Product[]
}

model Trader {
  id        Int      @id @default(autoincrement())
  fullName  String
  email     String   @unique
  password  String
  phone     String?
  location  String
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  product Product[]
  trade   Trade_transaction[]
  rate    Rate[]
  payment Payment[]

  @@index([email])
  @@index([location])
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  category_id Int
  trader_id   Int
  price       Float
  quantity    Int
  image1      String?
  image2      String?
  image3      String?
  image4      String?
  createdAt   DateTime @default(now())

  trade         Trade_transaction[]
  rate          Rate[]
  payment       Payment[]
  product_price Product_Price[]
  category      Category            @relation(fields: [category_id], references: [id])
  trader        Trader              @relation(fields: [trader_id], references: [id])

  @@index([category_id])
  @@index([price])
  @@index([trader_id])
  @@index([createdAt])
}

model Product_Price {
  id         Int      @id @default(autoincrement())
  price      Float
  product_id Int
  createdAt  DateTime @default(now())
  product    Product  @relation(fields: [product_id], references: [id])

  @@index([product_id])
}

model Trade_transaction {
  id             Int      @id @default(autoincrement())
  product_id     Int
  trader_id      Int
  buyer_id       Int
  quantity       Int
  transaction_id Int
  createdAt      DateTime @default(now())

  product Product @relation(fields: [product_id], references: [id])
  trader  Trader  @relation(fields: [trader_id], references: [id])

  @@index([trader_id])
  @@index([buyer_id])
  @@index([product_id])
}

model Rate {
  id         Int      @id @default(autoincrement())
  trader_id  Int
  product_id Int
  rate       Int
  createdAt  DateTime @default(now())

  trader  Trader  @relation(fields: [trader_id], references: [id])
  product Product @relation(fields: [product_id], references: [id])

  @@index([trader_id])
  @@index([product_id])
}

model Payment {
  id         Int   @id @default(autoincrement())
  trader_id  Int
  payer_id   Int
  product_id Int
  price      Float

  trader  Trader  @relation(fields: [trader_id], references: [id])
  product Product @relation(fields: [product_id], references: [id])

  @@index([trader_id])
  @@index([payer_id])
}

model AILog {
  id        Int      @id @default(autoincrement())
  userId    Int
  queryType String
  queryData Json
  aiResult  Json
  createdAt DateTime @default(now())

  @@index([userId])
}
